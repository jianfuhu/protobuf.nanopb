/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sat Apr 14 14:04:49 2018. */

#ifndef PB_DEMO_PB_H_INCLUDED
#define PB_DEMO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _cmdId_t {
    cmdId_t_SayHello = 0
} cmdId_t;
#define _cmdId_t_MIN cmdId_t_SayHello
#define _cmdId_t_MAX cmdId_t_SayHello
#define _cmdId_t_ARRAYSIZE ((cmdId_t)(cmdId_t_SayHello+1))

/* Struct definitions */
typedef struct _msgSayHello {
    cmdId_t cmdId;
    char msg[64];
/* @@protoc_insertion_point(struct:msgSayHello) */
} msgSayHello;

/* Default values for struct fields */
extern const cmdId_t msgSayHello_cmdId_default;

/* Initializer values for message structs */
#define msgSayHello_init_default                 {cmdId_t_SayHello, ""}
#define msgSayHello_init_zero                    {(cmdId_t)0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define msgSayHello_cmdId_tag                    1
#define msgSayHello_msg_tag                      2

/* Struct field encoding specification for nanopb */
extern const pb_field_t msgSayHello_fields[3];

/* Maximum encoded size of messages (where known) */
#define msgSayHello_size                         68

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DEMO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
